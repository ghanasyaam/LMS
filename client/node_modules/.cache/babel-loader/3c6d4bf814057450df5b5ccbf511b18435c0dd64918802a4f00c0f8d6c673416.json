{"ast":null,"code":"var _jsxFileName = \"/home/ghanasyam/Desktop/College/Semester 5/ACM/mern/client/src/components/StudentForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport StudentsList from \"./StudentsList.jsx\";\nimport AddStudentForm from \"./AddStudentForm.jsx\";\nimport EditStudentModal from \"./EditStudentModal.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StudentsApp() {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [form, setForm] = useState({\n    name: \"\",\n    rollno: \"\",\n    email: \"\",\n    sig: \"\",\n    role: \"\",\n    password: \"\",\n    phone: \"\"\n  });\n  const [editForm, setEditForm] = useState({\n    id: \"\",\n    name: \"\",\n    rollno: \"\",\n    email: \"\",\n    sig: \"\",\n    role: \"\",\n    password: \"\",\n    phone: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [editErrors, setEditErrors] = useState({});\n  const [isEditing, setIsEditing] = useState(false);\n\n  // Fetch all students\n  const fetchStudents = async () => {\n    try {\n      let res = await fetch(\"http://localhost:5051/\");\n      let data = await res.json();\n      setStudents(data);\n    } catch (error) {\n      console.error(\"Error fetching students:\", error);\n      // For demo purposes, set empty array\n      setStudents([{\n        _id: \"demo1\",\n        name: \"John Doe\",\n        rollno: \"AM.SC.U4CSE23001\",\n        email: \"am.sc.u4cse23001@am.students.amrita.edu\",\n        phone: \"9876543210\",\n        sig: \"WEB\",\n        role: \"CORE\",\n        createdAt: new Date().toISOString()\n      }]);\n    }\n  };\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n\n  // Handle form change\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm({\n      ...form,\n      [name]: value\n    });\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors({\n        ...errors,\n        [name]: \"\"\n      });\n    }\n  };\n\n  // Handle edit form change\n  const handleEditChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditForm({\n      ...editForm,\n      [name]: value\n    });\n    // Clear error when user starts typing\n    if (editErrors[name]) {\n      setEditErrors({\n        ...editErrors,\n        [name]: \"\"\n      });\n    }\n  };\n\n  // Validation functions\n  const validateRollNo = rollno => {\n    const rollPattern = /^AM\\.(SC|SE|SB|SA|EN|CB)\\.(U[1-9])[A-Z]{2,4}\\d{5}$/;\n    return rollPattern.test(rollno);\n  };\n  const validateEmail = email => {\n    const emailPattern = /^am\\.(sc|se|sb|sa|en|cb)\\.u\\d{1}[a-z]{2,4}\\d{5}@am\\.students\\.amrita\\.edu$/;\n    return emailPattern.test(email);\n  };\n  const validatePhone = phone => {\n    const phonePattern = /^[6-9]\\d{9}$/;\n    return phonePattern.test(phone);\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!form.name.trim()) {\n      newErrors.name = \"Name is required\";\n    }\n    if (!form.rollno.trim()) {\n      newErrors.rollno = \"Roll number is required\";\n    } else if (!validateRollNo(form.rollno)) {\n      newErrors.rollno = \"Roll number format: AM.SC.U4CSE23029\";\n    }\n    if (!form.email.trim()) {\n      newErrors.email = \"Email is required\";\n    } else if (!validateEmail(form.email)) {\n      newErrors.email = \"Email format: am.sc.u4cse23029@am.students.amrita.edu\";\n    }\n    if (!form.phone.trim()) {\n      newErrors.phone = \"Phone number is required\";\n    } else if (!validatePhone(form.phone)) {\n      newErrors.phone = \"Phone number must be a valid 10-digit Indian number\";\n    }\n    if (!form.password.trim()) {\n      newErrors.password = \"Password is required\";\n    } else if (form.password.length < 6) {\n      newErrors.password = \"Password must be at least 6 characters\";\n    }\n    if (!form.sig.trim()) {\n      newErrors.sig = \"SIG is required\";\n    }\n    if (!form.role) {\n      newErrors.role = \"Role is required\";\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const validateEditForm = () => {\n    const newErrors = {};\n\n    // Name validation - same as add form\n    if (!editForm.name.trim()) {\n      newErrors.name = \"Name is required\";\n    }\n\n    // Roll number validation - same as add form\n    if (!editForm.rollno.trim()) {\n      newErrors.rollno = \"Roll number is required\";\n    } else if (!validateRollNo(editForm.rollno)) {\n      newErrors.rollno = \"Roll number format: AM.SC.U4CSE23029\";\n    }\n\n    // Email validation - same as add form\n    if (!editForm.email.trim()) {\n      newErrors.email = \"Email is required\";\n    } else if (!validateEmail(editForm.email)) {\n      newErrors.email = \"Email format: am.sc.u4cse23029@am.students.amrita.edu\";\n    }\n\n    // Phone validation - same as add form (now required for edit too)\n    if (!editForm.phone.trim()) {\n      newErrors.phone = \"Phone number is required\";\n    } else if (!validatePhone(editForm.phone)) {\n      newErrors.phone = \"Phone number must be a valid 10-digit Indian number\";\n    }\n\n    // Password validation - only validate if provided (optional for edit)\n    if (editForm.password && editForm.password.length < 6) {\n      newErrors.password = \"Password must be at least 6 characters\";\n    }\n\n    // SIG validation - same as add form\n    if (!editForm.sig.trim()) {\n      newErrors.sig = \"SIG is required\";\n    }\n\n    // Role validation - same as add form\n    if (!editForm.role) {\n      newErrors.role = \"Role is required\";\n    }\n    setEditErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Add student\n  const addStudent = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5051/student\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(form)\n      });\n      if (response.ok) {\n        setForm({\n          name: \"\",\n          rollno: \"\",\n          email: \"\",\n          sig: \"\",\n          role: \"\",\n          password: \"\",\n          phone: \"\"\n        });\n        setErrors({});\n        fetchStudents();\n      } else {\n        const errorText = await response.text();\n        setErrors({\n          submit: errorText\n        });\n      }\n    } catch (error) {\n      setErrors({\n        submit: \"Network error occurred\"\n      });\n    }\n  };\n\n  // Start editing a student\n  const startEdit = student => {\n    setEditForm({\n      id: student._id,\n      name: student.name,\n      rollno: student.rollno,\n      email: student.email,\n      sig: student.sig,\n      role: student.role,\n      password: \"\",\n      // Don't populate password for security\n      phone: student.phone\n    });\n    setEditErrors({});\n    setIsEditing(true);\n  };\n\n  // Cancel editing\n  const cancelEdit = () => {\n    setEditForm({\n      id: \"\",\n      name: \"\",\n      rollno: \"\",\n      email: \"\",\n      sig: \"\",\n      role: \"\",\n      password: \"\",\n      phone: \"\"\n    });\n    setEditErrors({});\n    setIsEditing(false);\n  };\n\n  // Update student\n  const updateStudent = async e => {\n    e.preventDefault();\n    if (!validateEditForm()) {\n      return;\n    }\n    try {\n      // Prepare update data (exclude id and don't send empty password)\n      const {\n        id,\n        password,\n        ...updateData\n      } = editForm;\n\n      // Only include password if it's provided\n      if (password.trim()) {\n        updateData.password = password;\n      }\n      const response = await fetch(`http://localhost:5051/student/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updateData)\n      });\n      if (response.ok) {\n        setIsEditing(false);\n        setEditForm({\n          id: \"\",\n          name: \"\",\n          rollno: \"\",\n          email: \"\",\n          sig: \"\",\n          role: \"\",\n          password: \"\",\n          phone: \"\"\n        });\n        setEditErrors({});\n        fetchStudents();\n      } else {\n        const errorText = await response.text();\n        setEditErrors({\n          submit: errorText\n        });\n      }\n    } catch (error) {\n      setEditErrors({\n        submit: \"Network error occurred\"\n      });\n    }\n  };\n\n  // Delete student\n  const deleteStudent = async id => {\n    try {\n      await fetch(`http://localhost:5051/student/${id}`, {\n        method: \"DELETE\"\n      });\n      fetchStudents();\n    } catch (error) {\n      console.error(\"Error deleting student:\", error);\n    }\n  };\n  const sigOptions = [\"WEB\", \"APP\", \"AI\", \"GLITCH\", \"CYBER\"];\n  const roleOptions = [\"CORE\", \"CO-LEAD\", \"LEAD\", \"CHAIRPERSON\", \"VICE-CHAIRPERSON\", \"WEB-MASTER\", \"SECRETARY\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-black p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-6xl font-bold bg-gradient-to-r from-cyan-400 via-blue-500 to-pink-500 bg-clip-text text-transparent mb-4 tracking-wider\",\n          children: \"STUDENTS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-1 w-32 mx-auto bg-gradient-to-r from-cyan-400 to-pink-500 rounded-full shadow-lg shadow-cyan-500/50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddStudentForm, {\n        form: form,\n        errors: errors,\n        sigOptions: sigOptions,\n        roleOptions: roleOptions,\n        handleChange: handleChange,\n        addStudent: addStudent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditStudentModal, {\n        isOpen: isEditing,\n        form: editForm,\n        errors: errors,\n        sigOptions: sigOptions,\n        roleOptions: roleOptions,\n        handleChange: handleChange,\n        updateStudent: updateStudent,\n        closeModal: () => setIsEditing(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StudentsList, {\n        students: students,\n        startEdit: startEdit,\n        deleteStudent: deleteStudent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentsApp, \"3RFX+UUW8ng9kclpW+Bza+3PuZU=\");\n_c = StudentsApp;\nvar _c;\n$RefreshReg$(_c, \"StudentsApp\");","map":{"version":3,"names":["React","useEffect","useState","StudentsList","AddStudentForm","EditStudentModal","jsxDEV","_jsxDEV","StudentsApp","_s","students","setStudents","form","setForm","name","rollno","email","sig","role","password","phone","editForm","setEditForm","id","errors","setErrors","editErrors","setEditErrors","isEditing","setIsEditing","fetchStudents","res","fetch","data","json","error","console","_id","createdAt","Date","toISOString","handleChange","e","value","target","handleEditChange","validateRollNo","rollPattern","test","validateEmail","emailPattern","validatePhone","phonePattern","validateForm","newErrors","trim","length","Object","keys","validateEditForm","addStudent","preventDefault","response","method","headers","body","JSON","stringify","ok","errorText","text","submit","startEdit","student","cancelEdit","updateStudent","updateData","deleteStudent","sigOptions","roleOptions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","closeModal","_c","$RefreshReg$"],"sources":["/home/ghanasyam/Desktop/College/Semester 5/ACM/mern/client/src/components/StudentForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport StudentsList from \"./StudentsList.jsx\";\nimport AddStudentForm from \"./AddStudentForm.jsx\";\nimport EditStudentModal from \"./EditStudentModal.jsx\";\n\nexport default function StudentsApp() {\n  const [students, setStudents] = useState([]);\n  const [form, setForm] = useState({ \n    name: \"\", \n    rollno: \"\", \n    email: \"\", \n    sig: \"\", \n    role: \"\", \n    password: \"\", \n    phone: \"\" \n  });\n  const [editForm, setEditForm] = useState({ \n    id: \"\",\n    name: \"\", \n    rollno: \"\", \n    email: \"\", \n    sig: \"\", \n    role: \"\", \n    password: \"\", \n    phone: \"\" \n  });\n  const [errors, setErrors] = useState({});\n  const [editErrors, setEditErrors] = useState({});\n  const [isEditing, setIsEditing] = useState(false);\n\n  // Fetch all students\n  const fetchStudents = async () => {\n    try {\n      let res = await fetch(\"http://localhost:5051/\");\n      let data = await res.json();\n      setStudents(data);\n    } catch (error) {\n      console.error(\"Error fetching students:\", error);\n      // For demo purposes, set empty array\n      setStudents([\n        {\n          _id: \"demo1\",\n          name: \"John Doe\",\n          rollno: \"AM.SC.U4CSE23001\",\n          email: \"am.sc.u4cse23001@am.students.amrita.edu\",\n          phone: \"9876543210\",\n          sig: \"WEB\",\n          role: \"CORE\",\n          createdAt: new Date().toISOString()\n        }\n      ]);\n    }\n  };\n\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n\n  // Handle form change\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setForm({ ...form, [name]: value });\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors({ ...errors, [name]: \"\" });\n    }\n  };\n\n  // Handle edit form change\n  const handleEditChange = (e) => {\n    const { name, value } = e.target;\n    setEditForm({ ...editForm, [name]: value });\n    // Clear error when user starts typing\n    if (editErrors[name]) {\n      setEditErrors({ ...editErrors, [name]: \"\" });\n    }\n  };\n\n  // Validation functions\n  const validateRollNo = (rollno) => {\n    const rollPattern = /^AM\\.(SC|SE|SB|SA|EN|CB)\\.(U[1-9])[A-Z]{2,4}\\d{5}$/;\n    return rollPattern.test(rollno);\n  };\n\n  const validateEmail = (email) => {\n    const emailPattern = /^am\\.(sc|se|sb|sa|en|cb)\\.u\\d{1}[a-z]{2,4}\\d{5}@am\\.students\\.amrita\\.edu$/;\n    return emailPattern.test(email);\n  };\n\n  const validatePhone = (phone) => {\n    const phonePattern = /^[6-9]\\d{9}$/;\n    return phonePattern.test(phone);\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!form.name.trim()) {\n      newErrors.name = \"Name is required\";\n    }\n\n    if (!form.rollno.trim()) {\n      newErrors.rollno = \"Roll number is required\";\n    } else if (!validateRollNo(form.rollno)) {\n      newErrors.rollno = \"Roll number format: AM.SC.U4CSE23029\";\n    }\n\n    if (!form.email.trim()) {\n      newErrors.email = \"Email is required\";\n    } else if (!validateEmail(form.email)) {\n      newErrors.email = \"Email format: am.sc.u4cse23029@am.students.amrita.edu\";\n    }\n\n    if (!form.phone.trim()) {\n      newErrors.phone = \"Phone number is required\";\n    } else if (!validatePhone(form.phone)) {\n      newErrors.phone = \"Phone number must be a valid 10-digit Indian number\";\n    }\n\n    if (!form.password.trim()) {\n      newErrors.password = \"Password is required\";\n    } else if (form.password.length < 6) {\n      newErrors.password = \"Password must be at least 6 characters\";\n    }\n\n    if (!form.sig.trim()) {\n      newErrors.sig = \"SIG is required\";\n    }\n\n    if (!form.role) {\n      newErrors.role = \"Role is required\";\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const validateEditForm = () => {\n    const newErrors = {};\n\n    // Name validation - same as add form\n    if (!editForm.name.trim()) {\n      newErrors.name = \"Name is required\";\n    }\n\n    // Roll number validation - same as add form\n    if (!editForm.rollno.trim()) {\n      newErrors.rollno = \"Roll number is required\";\n    } else if (!validateRollNo(editForm.rollno)) {\n      newErrors.rollno = \"Roll number format: AM.SC.U4CSE23029\";\n    }\n\n    // Email validation - same as add form\n    if (!editForm.email.trim()) {\n      newErrors.email = \"Email is required\";\n    } else if (!validateEmail(editForm.email)) {\n      newErrors.email = \"Email format: am.sc.u4cse23029@am.students.amrita.edu\";\n    }\n\n    // Phone validation - same as add form (now required for edit too)\n    if (!editForm.phone.trim()) {\n      newErrors.phone = \"Phone number is required\";\n    } else if (!validatePhone(editForm.phone)) {\n      newErrors.phone = \"Phone number must be a valid 10-digit Indian number\";\n    }\n\n    // Password validation - only validate if provided (optional for edit)\n    if (editForm.password && editForm.password.length < 6) {\n      newErrors.password = \"Password must be at least 6 characters\";\n    }\n\n    // SIG validation - same as add form\n    if (!editForm.sig.trim()) {\n      newErrors.sig = \"SIG is required\";\n    }\n\n    // Role validation - same as add form\n    if (!editForm.role) {\n      newErrors.role = \"Role is required\";\n    }\n\n    setEditErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Add student\n  const addStudent = async (e) => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    \n    try {\n      const response = await fetch(\"http://localhost:5051/student\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(form),\n      });\n      \n      if (response.ok) {\n        setForm({ name: \"\", rollno: \"\", email: \"\", sig: \"\", role: \"\", password: \"\", phone: \"\" });\n        setErrors({});\n        fetchStudents();\n      } else {\n        const errorText = await response.text();\n        setErrors({ submit: errorText });\n      }\n    } catch (error) {\n      setErrors({ submit: \"Network error occurred\" });\n    }\n  };\n\n  // Start editing a student\n  const startEdit = (student) => {\n    setEditForm({\n      id: student._id,\n      name: student.name,\n      rollno: student.rollno,\n      email: student.email,\n      sig: student.sig,\n      role: student.role,\n      password: \"\", // Don't populate password for security\n      phone: student.phone\n    });\n    setEditErrors({});\n    setIsEditing(true);\n  };\n\n  // Cancel editing\n  const cancelEdit = () => {\n    setEditForm({ \n      id: \"\",\n      name: \"\", \n      rollno: \"\", \n      email: \"\", \n      sig: \"\", \n      role: \"\", \n      password: \"\", \n      phone: \"\" \n    });\n    setEditErrors({});\n    setIsEditing(false);\n  };\n\n  // Update student\n  const updateStudent = async (e) => {\n    e.preventDefault();\n    if (!validateEditForm()) {\n      return;\n    }\n    \n    try {\n      // Prepare update data (exclude id and don't send empty password)\n      const { id, password, ...updateData } = editForm;\n      \n      // Only include password if it's provided\n      if (password.trim()) {\n        updateData.password = password;\n      }\n\n      const response = await fetch(`http://localhost:5051/student/${id}`, {\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(updateData),\n      });\n      \n      if (response.ok) {\n        setIsEditing(false);\n        setEditForm({ \n          id: \"\",\n          name: \"\", \n          rollno: \"\", \n          email: \"\", \n          sig: \"\", \n          role: \"\", \n          password: \"\", \n          phone: \"\" \n        });\n        setEditErrors({});\n        fetchStudents();\n      } else {\n        const errorText = await response.text();\n        setEditErrors({ submit: errorText });\n      }\n    } catch (error) {\n      setEditErrors({ submit: \"Network error occurred\" });\n    }\n  };\n\n  // Delete student\n  const deleteStudent = async (id) => {\n    try {\n      await fetch(`http://localhost:5051/student/${id}`, { method: \"DELETE\" });\n      fetchStudents();\n    } catch (error) {\n      console.error(\"Error deleting student:\", error);\n    }\n  };\n\n  const sigOptions = [\"WEB\", \"APP\", \"AI\", \"GLITCH\", \"CYBER\"];\n  const roleOptions = [\"CORE\", \"CO-LEAD\", \"LEAD\", \"CHAIRPERSON\", \"VICE-CHAIRPERSON\", \"WEB-MASTER\", \"SECRETARY\"];\n\n  return (\n    <div className=\"min-h-screen bg-black p-6\">\n      <div className=\"max-w-6xl mx-auto\">\n        {/* Header */}\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-6xl font-bold bg-gradient-to-r from-cyan-400 via-blue-500 to-pink-500 bg-clip-text text-transparent mb-4 tracking-wider\">\n            STUDENTS\n          </h1>\n          <div className=\"h-1 w-32 mx-auto bg-gradient-to-r from-cyan-400 to-pink-500 rounded-full shadow-lg shadow-cyan-500/50\"></div>\n        </div>\n\n        {/* Add Form */}\n        <AddStudentForm\n          form={form}\n          errors={errors}\n          sigOptions={sigOptions}\n          roleOptions={roleOptions}\n          handleChange={handleChange}\n          addStudent={addStudent}\n        />\n\n        <EditStudentModal\n          isOpen={isEditing}\n          form={editForm}\n          errors={errors}\n          sigOptions={sigOptions}\n          roleOptions={roleOptions}\n          handleChange={handleChange}\n          updateStudent={updateStudent}\n          closeModal={() => setIsEditing(false)}\n        />\n\n\n        <StudentsList \n          students={students} \n          startEdit={startEdit} \n          deleteStudent={deleteStudent} \n        />\n\n        {/* <div>\n          <div className=\"text-center mb-8\">\n            <h2 className=\"text-4xl font-bold bg-gradient-to-r from-pink-400 via-purple-500 to-cyan-400 bg-clip-text text-transparent tracking-wide\">\n              ALL STUDENTS\n            </h2>\n            <div className=\"h-0.5 w-24 mx-auto bg-gradient-to-r from-pink-400 to-cyan-400 rounded-full mt-3\"></div>\n          </div>\n          \n          {students.length === 0 ? (\n            <div className=\"text-center py-16\">\n              <div className=\"bg-black/40 backdrop-blur-xl border border-cyan-500/20 rounded-2xl p-8 max-w-md mx-auto\">\n                <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-gradient-to-r from-cyan-500/20 to-pink-500/20 flex items-center justify-center\">\n                  <div className=\"w-8 h-8 rounded-full bg-gradient-to-r from-cyan-400 to-pink-400\"></div>\n                </div>\n                <p className=\"text-cyan-300 text-lg font-medium\">No students in database.</p>\n              </div>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {students.map((s) => (\n                <div\n                  key={s._id}\n                  className=\"group bg-black/40 backdrop-blur-xl border border-pink-500/20 rounded-2xl p-6 shadow-xl shadow-pink-500/10 hover:shadow-cyan-500/20 hover:border-cyan-500/40 transition-all duration-300 hover:transform hover:scale-105\"\n                >\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-cyan-400 font-medium text-sm tracking-wider\">ID:</span>\n                      <span className=\"text-pink-300 font-mono text-sm bg-slate-800/50 px-2 py-1 rounded\">\n                        {s._id}\n                      </span>\n                    </div>\n                    \n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-cyan-400 font-medium\">Name:</span>\n                      <span className=\"text-white font-semibold\">{s.name}</span>\n                    </div>\n                    \n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-cyan-400 font-medium\">Roll:</span>\n                      <span className=\"text-pink-300 font-mono\">{s.rollno}</span>\n                    </div>\n                    \n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-cyan-400 font-medium\">Email:</span>\n                      <span className=\"text-purple-300 text-sm\">{s.email}</span>\n                    </div>\n\n                    {s.phone && (\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-cyan-400 font-medium\">Phone:</span>\n                        <span className=\"text-green-300\">{s.phone}</span>\n                      </div>\n                    )}\n                    \n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-cyan-400 font-medium\">SIG:</span>\n                      <span className=\"text-cyan-200\">{s.sig}</span>\n                    </div>\n                    \n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-cyan-400 font-medium\">Role:</span>\n                      <span className=\"text-pink-200\">{s.role}</span>\n                    </div>\n\n                    {s.createdAt && (\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-cyan-400 font-medium text-sm\">Created:</span>\n                        <span className=\"text-gray-300 text-sm\">\n                          {new Date(s.createdAt).toLocaleDateString()}\n                        </span>\n                      </div>\n                    )}\n                  </div>\n                  \n                  <div className=\"mt-6 pt-4 border-t border-pink-500/20 space-y-3\">\n                    <button\n                      onClick={() => startEdit(s)}\n                      className=\"w-full px-4 py-2 bg-gradient-to-r from-blue-600 to-cyan-600 text-white font-bold rounded-lg shadow-lg shadow-blue-500/25 hover:shadow-cyan-500/40 hover:shadow-xl transform hover:scale-105 transition-all duration-300 tracking-wide\"\n                    >\n                      EDIT\n                    </button>\n                    <button\n                      onClick={() => deleteStudent(s._id)}\n                      className=\"w-full px-4 py-2 bg-gradient-to-r from-red-600 to-pink-600 text-white font-bold rounded-lg shadow-lg shadow-red-500/25 hover:shadow-pink-500/40 hover:shadow-xl transform hover:scale-105 transition-all duration-300 tracking-wide\"\n                    >\n                      DELETE\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div> */}\n\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}